package SQL;

import java.sql.SQLException;
import java.util.*;

import Beans.*;

public class SQLForumVieScolaire extends SQL{
	
	/**
	 * Créer une instance de la class SQLForumVieScolaire et la connecte à la base de données
	 */
	public SQLForumVieScolaire(){
		super();
	}
	
	/**
	 * Retourne la liste des semestres d'une enseigne donné
	 * @param idEnseigne identifiant de l'enseigne
	 * @return la liste des semestres en fonction d'une enseigne donné
	 */
	public List<Semestre> getSemestresByIdEnseigne(int idEnseigne){
		List<Semestre> listeSemestre = new ArrayList<Semestre>();
		try {
			this.setStatement(this.getConnexion().createStatement());
		} catch (SQLException e) {
			System.out.println("erreur dans la création du statement");
			e.printStackTrace();
		}
		try {
			this.setResultat(this.getStatement().executeQuery("SELECT * FROM SEMESTRE WHERE id_Enseigne = "+idEnseigne+";"));
		} catch (SQLException e) {
			System.out.println("erreur dans l'execution de la requete SQL");
			e.printStackTrace();
		}
		try {
			while ( this.getResultat().next() ) {
				Semestre s = new Semestre(this.getResultat().getInt("id_Semestre"),this.getResultat().getInt("numero"));
				listeSemestre.add(s);
			}
		} catch (SQLException e) {
			System.out.println("erreur dans la recupération des données");
			e.printStackTrace();
		}
		return listeSemestre;
	}
	/**
	 * 
	 * @param idSemestre identifiant du semestre
	 * @return
	 */
	public List<Ue> getUesByIdSemestre(int idSemestre){
		List<Ue> listeUe = new ArrayList<Ue>();
		try {
			this.setStatement(this.getConnexion().createStatement());
		} catch (SQLException e) {
			System.out.println("erreur dans la création du statement");
			e.printStackTrace();
		}
		try {
			this.setResultat(this.getStatement().executeQuery("SELECT * FROM Ue WHERE id_Semestre = "+idSemestre+";"));
		} catch (SQLException e) {
			System.out.println("erreur dans l'execution de la requete SQL");
			e.printStackTrace();
		}
		try {
			while ( this.getResultat().next() ) {
				Ue ue = new Ue(this.getResultat().getInt("id_Ue"),this.getResultat().getInt("numero"),this.getResultat().getString("libelle"));
				listeUe.add(ue);
			}
		} catch (SQLException e) {
			System.out.println("erreur dans la recupération des données");
			e.printStackTrace();
		}
		return listeUe;
	}
	/**
	 * Récupère la liste des module d'un semestre donnée
	 * @param idSemestre identifiant du semestre
	 * @return la liste des modules d'un semestres donnée
	 */
	public List<Module> getModulesByIdSemestre(int idSemestre){
		List<Module> listeModule = new ArrayList<Module>();
		try {
			this.setStatement(this.getConnexion().createStatement());
		} catch (SQLException e) {
			System.out.println("erreur dans la création du statement");
			e.printStackTrace();
		}
		try {
			this.setResultat(this.getStatement().executeQuery("SELECT * FROM Module WHERE id_Semestre = "+idSemestre+";"));
		} catch (SQLException e) {
			System.out.println("erreur dans l'execution de la requete SQL");
			e.printStackTrace();
		}
		try {
			while ( this.getResultat().next() ) {
				Module m = new Ue(this.getResultat().getInt("id_Module"),this.getResultat().getInt("numero"),this.getResultat().getString("libelle"),this.getResultat().getInt("id_Ue"));
				listeModule.add(m);
			}
		} catch (SQLException e) {
			System.out.println("erreur dans la recupération des données");
			e.printStackTrace();
		}
		return listeModule;
	}
	/**
	 * Récupère la liste des Sujets d'un module et d'un nom de forum donné, nomForum E {Cours,Partiels,Travaux Pratique,Travaux Dirigé} pour forum.type = vieScolaire
	 * @param idModule identifiant du module
	 * @param idForum id du forum
	 * @return la liste des Sujets d'un module et d'un nom de forum donné, nomForum E {Cours,Partiels,Travaux Pratique,Travaux Dirigé} pour forum.type = vieScolaire
	 */
	public List<Sujet> getSujetsByIdModuleAndIdForum(int idModule, int idForum){
		return null;
	}
	/**
	 * Récupère la liste des forums de la vie scolaire des étudiants d'une enseigne donnée (forum.type = "vieScolaire" in BDD)
	 * @return la liste des forums de la vie scolaire des étudiants d'une enseigne donnée
	 */
	public List<Forum> recupererForums(){
		return null;
	}
	/**
	 * Récupère la liste des topics d'un sujet donné
	 * @param s sujet
	 * @return la liste des topics d'un sujet donné
	 */
	public List<Commentaire> recupererTopics(Sujet s){
		return null;
	}
	
	
	
	
}
